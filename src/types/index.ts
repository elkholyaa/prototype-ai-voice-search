/**
 * src/types/index.ts
 * ========================
 * Purpose:
 *   This file contains the shared TypeScript type definitions for the bilingual
 *   real‑estate search proof-of-concept. It defines the structure for Property objects
 *   used throughout the application, including both the basic property shape and the
 *   extended version that includes an embedding (for AI-powered search).
 *
 * Role & Relation:
 *   - These types are used by data generation scripts, search utilities, API responses,
 *     UI components, and any other module that deals with property data.
 *   - The basic interface, Property, defines the expected shape of property objects.
 *   - The extended interface, PropertyWithEmbedding, extends Property to include an
 *     embedding array (of numbers) which is used for semantic search.
 *
 * Workflow & Design Decisions:
 *   - The id field is defined as string | number to allow for flexibility when casting JSON data.
 *   - By centralizing our type definitions, we simplify maintenance and ensure consistency
 *     throughout the codebase.
 *
 * Educational Comments:
 *   - Adding the PropertyWithEmbedding interface ensures that modules such as generateEmbeddings.ts
 *     can safely import and use this type for properties that have been processed for AI embeddings.
 *   - This file is imported by various parts of the project (e.g. in data generation and search utilities)
 *     to enforce the expected structure of property data.
 */

export interface Property {
  id: string | number;
  title: string;
  description: string;
  type: string; // Could be further restricted to a union type (PropertyType) if desired.
  features: string[];
  price: number;
  city: string;
  district: string;
  images?: string[];
}

/**
 * PropertyWithEmbedding extends the basic Property interface by adding an embedding field.
 * The embedding is a number array (typically generated by an AI model) used for semantic search.
 */
export interface PropertyWithEmbedding extends Property {
  embedding: number[];
}

export type PropertyType =
  | "فيلا"
  | "شقة"
  | "قصر"
  | "دوبلكس"
  | "Apartment"
  | "Villa"
  | "Mansion"
  | "Duplex";
